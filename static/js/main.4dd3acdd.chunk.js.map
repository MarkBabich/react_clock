{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["getTime","date","toUTCString","slice","Clock","state","currentDate","Date","timerId","this","window","setInterval","setState","console","info","prevProps","props","clockName","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","App","hasClock","rightClick","event","preventDefault","leftClick","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"8MAUA,SAASA,EAAQC,GACf,OAAOA,EAAKC,cAAcC,OAAO,IAAK,GAGjC,IAAMC,EAAb,4MACEC,MAAe,CACbC,YAAa,IAAIC,MAFrB,EAKEC,QAAU,EALZ,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,YAAa,IAAIC,OACjCG,OAAOG,QAAQC,KACbd,EAAQ,EAAKK,MAAMC,gBAEpB,OAbP,gCAgBE,SAAmBS,GACbN,KAAKO,MAAMC,YAAcF,EAAUE,WACrCP,OAAOG,QAAQK,MAAf,uBACkBH,EAAUE,UAD5B,eAC4CR,KAAKO,MAAMC,cAnB7D,kCAwBE,WACEP,OAAOS,cAAcV,KAAKD,WAzB9B,oBA4BE,WACE,IAAQS,EAAcR,KAAKO,MAAnBC,UACAX,EAAgBG,KAAKJ,MAArBC,YAER,OACE,sBAAKc,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGH,IAGF,YAED,sBAAMG,UAAU,cAAhB,SACGpB,EAAQM,YAzCnB,GAA2Be,IAAMC,W,MCVjC,SAASC,IACP,IAAMC,EAAQjB,KAAKkB,MAAMC,WAAWvB,OAAO,GAE3C,MAAM,SAAN,OAAgBqB,GAQX,IAAMG,EAAb,4MACEtB,MAAe,CACbuB,UAAU,EACVX,UAAW,WAHf,EAMET,QAAU,EANZ,EAuBEqB,WAAa,SAACC,GACZA,EAAMC,iBACN,EAAKnB,SAAS,CAAEgB,UAAU,KAzB9B,EA4BEI,UAAY,WACV,EAAKpB,SAAS,CAAEgB,UAAU,KA7B9B,uDAQE,WAA2B,IAAD,OACxBnB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEK,UAAWM,QAC1B,MAEHU,SAASC,iBAAiB,cAAezB,KAAKoB,YAC9CI,SAASC,iBAAiB,QAASzB,KAAKuB,aAd5C,kCAiBE,WACEtB,OAAOS,cAAcV,KAAKD,SAC1ByB,SAASE,oBAAoB,cAAe1B,KAAKoB,YACjDI,SAASE,oBAAoB,QAAS1B,KAAKuB,aApB/C,oBAgCE,WACE,MAGIvB,KAAKJ,MAFPY,EADF,EACEA,UACAW,EAFF,EAEEA,SAGF,OACE,sBAAKR,UAAU,MAAf,UACE,6CAGEQ,GAAY,cAAC,EAAD,CAAOX,UAAWA,WA3CxC,GAAyBI,IAAMC,WCZ/Bc,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.4dd3acdd.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  clockName: string,\n};\n\ntype State = {\n  currentDate: Date,\n};\n\nfunction getTime(date: Date): string {\n  return date.toUTCString().slice(-12, -4);\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    currentDate: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ currentDate: new Date() });\n      window.console.info(\n        getTime(this.state.currentDate),\n      );\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>): void {\n    if (this.props.clockName !== prevProps.clockName) {\n      window.console.debug(\n        `Renamed from ${prevProps.clockName} to ${this.props.clockName}`,\n      );\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { currentDate } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {getTime(currentDate)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './components/Clock';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', this.rightClick);\n    document.addEventListener('click', this.leftClick);\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n    document.removeEventListener('contextmenu', this.rightClick);\n    document.removeEventListener('click', this.leftClick);\n  }\n\n  rightClick = (event: MouseEvent): void => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  leftClick = (): void => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const {\n      clockName,\n      hasClock,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {\n          hasClock && <Clock clockName={clockName} />\n        }\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}